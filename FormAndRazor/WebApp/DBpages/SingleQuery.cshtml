@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Single Query";
    var searcharg=Request.Form["searcharg"];
    var regionid="";
    var description="";
    var thebutton = Request.Form["formbutton"];

    //remember the 1st pass, your incoming data value will be null 
    // because the form has yet to be displayed
    if(string.IsNullOrEmpty(searcharg))
    {
        searcharg = "0";
    }

    //we need to connect to the database, which has the data
    // we need to know the connection string name to this database
    var db = Database.Open("NWDB");

    //create the command thhat will be ssent to the database
    // you can create your commands over multiple
    // argument values will be indicaed in your command using 
    // placeholders @n where n is an index
    var querycommand = "Select RegionID, RegionDescription "
                        + "FROM Region "
                        + "Where RegionID = @0";

    //execute the command and obtain the results
    //placeholders will be given values during this process
    //order of values for placeholders is important
    // .QuerySingle() used when you expect a single record to be return
    // .Query() used when you expect 0 1 or more records to be returned
    // .QueryValue() used when a single value(not record) is to be returned (count, add etc.)
    var results = db.QuerySingle(querycommand, searcharg);



}
@section banner{
    <h1>Database: Single Query</h1>

}

@if(IsPost)
{
    //determine if submit button pressed
    if(thebutton.Equals("clear"))
    {
        searcharg = "0";
        regionid = "";
        description = "";
    }
    else
    {
        //determine if there is anything to display
        // for .QuerySingle() use xxx == null
        // for .Query() use xxx.Count() == 0
        if (results == null)
        {
            //regionid is not in data base
            <p><span style="color:blue">Region id not found.</span></p>
            regionid = "";
            description = "";
        }
        else
        {
            //region record was found on the database
            // there are 2 techniques to access data off your resulting database record
            //a) using an index: xxxx[index] were index is the column index
            //b) using the column title property name: xxxx.columntitlepropertyname
            regionid = results[0].ToString(); //1st column
            description = results.RegionDescription; //2nd column
        }
    }


}




<form id="theform" method="post">
    <div class="row">
        <div class="col-md-4">

            <label for="searcharg">Enter Region Id:</label>
            <input type="number" id="searcharg" name="searcharg"
                   placeholder="enter region Id" step="1" min="0"
                   value="@searcharg" />
            <br />
            <button type="submit" id="formbutton" name="formbutton"
                    value="search" class="btn btn-primary">
                Search
            </button>
            &nbsp;&nbsp;
            <button type="submit" id="formbutton" name="formbutton"
                    value="clear" class="btn">
                Clear
            </button>

        </div>
        <div class="col-md-8">


            <label for="regionid">Region Id:</label>
            <input type="text" id="regionid" name="regionid"
                   value="@regionid" />
            <br />

            <label for="description">Region name:</label>
            <input type="text" id="description" name="description"
                   value="@description" />
            <br />
        </div>
   </div>
</form>




@section footer{
    &copy; CPSC1517 Nait 2019, all rights reserved
}


